version: '3.0'

services:
   rego:
      build: rego/.
      command: npm run dev
      restart: always
      ports:
         - 8080:8080
         - 3000:3000
      networks:
         - mmt-dmz
         - proxy
      volumes:
         - ./rego/src/:/usr/src/client
         - ./rego/tests/:/usr/src/tests
         - ./rego/coverage/:/usr/src/coverage
      environment:
         NODE_ENV: ${MMT19_ENV}
   admin:
      build: admin/.
      command: npm run dev
      restart: always
      ports:
         - 8081:8081
      networks:
         - mmt-dmz
         - proxy
      volumes:
         - ./admin/src/:/usr/src/client
         - ./admin/tests/:/usr/src/tests
         - ./admin/coverage/:/usr/src/coverage
      environment:
         NODE_ENV: ${MMT19_ENV}
   backend:
      build: backend/.
      restart: always
      ports:
         - 3010:3000
      networks:
         - mmt-dmz
      volumes:
         - ./backend/app:/usr/src/app/app
         - ./backend/config:/usr/src/app/config
         - ./backend/test:/usr/src/app/test
         - ./backend/db:/usr/src/app/db
         - ./backend/tasks:/usr/src/app/tasks
         - ./backend/public:/usr/src/public
         - ./backend/qrs:/usr/src/app/app/assets/images/qr/
      environment:
         RAILS_ENV: ${MMT19_ENV}
         DB_URL: ${MMT19_DB_URL}
         DB_MASTER: postgres
         DB_MASTER_PASSWORD: ${MMT19_DB_POSTGRES_PASSWORD}
         DB_PASSWORD: ${MMT19_DB_DEV_PASSWORD}
         DB_USER: ${MMT19_DB_DEV_USER}
         DB_TEST_NAME: ${MMT19_DB_DEV_USER}
         MAILGUN_DEV_KEY: ${MMT19_MAILGUN_DEV_KEY}
         MAILGUN_DEV_DOMAIN: ${MMT19_MAILGUN_DEV_DOMAIN}
   backdb:
      build: backend/.
      networks:
         - mmt-dmz
      volumes:
         - ./backend/db:/usr/src/app/db
      environment:
         RAILS_ENV: ${MMT19_ENV}
         DB_URL: ${MMT19_DB_URL}
         DB_MASTER: postgres
         DB_MASTER_PASSWORD: ${MMT19_DB_POSTGRES_PASSWORD}
         DB_PASSWORD: ${MMT19_DB_DEV_PASSWORD}
         DB_USER: ${MMT19_DB_DEV_USER}
         DB_TEST_NAME: ${MMT19_DB_DEV_USER}
         MAILGUN_DEV_KEY: ${MMT19_MAILGUN_DEV_KEY}
         MAILGUN_DEV_DOMAIN: ${MMT19_MAILGUN_DEV_DOMAIN}
   rego-api:
      build: rego-api/.
      command: cargo watch -d0.1 -x run
      ports:
         - 8082:8000
      networks:
         - mmt-dmz
         - proxy
      volumes:
         - ./rego-api/src:/e/src
         - ./rego-api/Cargo.toml:/e/Cargo.toml
         - ./rego-api/Cargo.lock:/e/Cargo.lock
         - ./rego-api/Rocket.toml:/e/Rocket.toml
         - ./rego-api/templates:/e/templates
         - rustapitarget:/e/target
         - rustapicargoregistry:/usr/local/cargo/registry
      environment:
         ENVIRONMENT: development 
         MAILGUN_HELLO: ${MMT20_MAILGUN_HELLO}
         MAILGUN_SERVER: ${MMT20_MAILGUN_SERVER}
         MAILGUN_USER: ${MMT20_MAILGUN_USER}
         MAILGUN_PASS: ${MMT20_MAILGUN_PASS}
         EMAIL_RETURN: ${MMT20_EMAIL_RETURN}
   admin-api:
      build: rego-api/.
      command: cargo watch -d0.1 -x run
      ports:
         - 8083:8000
      networks:
         - mmt-dmz
         - proxy
      volumes:
         - ./admin-api/src:/e/src
         - ./admin-api/Cargo.toml:/e/Cargo.toml
         - ./admin-api/Cargo.lock:/e/Cargo.lock
         - ./admin-api/Rocket.toml:/e/Rocket.toml
         - ./admin-api/templates:/e/templates
         - rustapitarget:/e/target
         - rustapicargoregistry:/usr/local/cargo/registry
      environment:
         ENVIRONMENT: development 
         MAILGUN_HELLO: ${MMT20_MAILGUN_HELLO}
         MAILGUN_SERVER: ${MMT20_MAILGUN_SERVER}
         MAILGUN_USER: ${MMT20_MAILGUN_USER}
         MAILGUN_PASS: ${MMT20_MAILGUN_PASS}
         EMAIL_RETURN: ${MMT20_EMAIL_RETURN}
   nginx:
      build: ./nginx
      restart: always
      # ports:
      #    - "8080:80"
      networks:
         - proxy
      links:
         - rego
         - admin
   db:
      image: mongo
      restart: always
      ports:
         - "27017:27017"
      networks:
         - mmt-dmz
      volumes:
         - /Users/grant/mongodb_data:/data/db

networks:
   default:
      driver: bridge
   mmt-dmz:
      external:
         name: mmt-dmz
   proxy:
      external:
         name: proxy
volumes:
   rustapitarget:
      driver: local
   rustapicargoregistry:
      driver: local
