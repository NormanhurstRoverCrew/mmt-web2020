# select build image
FROM rustlang/rust:nightly as build

# create a new empty shell project
RUN USER=root cargo new --bin --vcs none rego-api
WORKDIR /rego-api

# copy over your manifests
COPY rego-api/Cargo.lock ./Cargo.lock
COPY rego-api/Cargo.toml ./Cargo.toml
COPY ./proto ./proto
COPY ./mmt ../mmt
COPY ./mmt-db ../mmt-db
COPY ./mmt-derive ../mmt-derive

# this build step will cache your dependencies
RUN cargo build --release
RUN rm src/*.rs

# copy your source tree
COPY rego-api/src ./src

# build for release
RUN rm /rego-api/target/release/deps/rego-api*
RUN cargo build --release

# our final base
#FROM alpine
FROM ubuntu@sha256:5f4bdc3467537cbbe563e80db2c3ec95d548a9145d64453b06939c4592d67b6d

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get -y install ca-certificates libssl-dev && rm -rf /var/lib/apt/lists/*

WORKDIR /rego-api

# copy the build artifact from the build stage
COPY --from=build /rego-api/target/release/rego-api ./rego-api
COPY ./Rocket.toml ./Rocket.toml

# set the startup command to run your binary
# CMD ["./rego-api"]
